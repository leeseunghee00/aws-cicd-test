name: AWS CI/CD TEST

# 실행 시점 설정
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# AWS 변수 설정
env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: aws-cicd-test-bucket
  AWS_CODE_DEPLOY_APPLICATION: cicd-test-codedeploy
  AWS_CODE_DEPLOY_GROUP: cicd-test-codedeploy-group 

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4

    # Java17 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Gradle 권한 부여 및 실행
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # 빌드 파일 압축
    - name: Make zip file
      run: zip -r ./$GITHUB_SHA.zip .
      shell: bash

    # AWS 권한 설정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}

    # S3 업로드
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$AWS_S3_BUCKET/$GITHUB_SHA.zip

    # EC2 배포 시작
    - name: Start CodeDeploy
      run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=$GITHUB_SHA.zip,bundleType=zip
